@using MudBlazor
@using System.Collections.ObjectModel
@inherits GenDirTest.Components.DealScenarioAllocatorBase

<MudPaper Class="pa-4 d-flex flex-column gap-4" Elevation="1">
    <MudStack Row="true" AlignItems="center" Justify="space-between">
        <MudText Typo="Typo.h5">Deal Scenario Allocation</MudText>

        <MudStack Row="true" Spacing="2" AlignItems="center">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="CreateScenario" Disabled="@IsBusy || ScenarioCreated">
                @if (IsBusy && !ScenarioCreated)
                {
                    <MudProgressCircular Indeterminate="true" Size="16" Class="mr-2" />
                }
                Create Scenario
            </MudButton>

            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Disabled="@(!ScenarioCreated || IsBusy)" OnClick="SaveAllocations">
                @if (IsSaving)
                {
                    <MudProgressCircular Indeterminate="true" Size="16" Class="mr-2" />
                }
                Save Allocations
            </MudButton>

            <MudButton Variant="Variant.Text" Color="Color.Default" Disabled="@(!ScenarioCreated || IsBusy)" OnClick="ResetAll">
                Reset
            </MudButton>
        </MudStack>
    </MudStack>

    @if (ErrorMessage is not null)
    {
        <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="mb-2">
            @ErrorMessage
        </MudAlert>
    }

    <MudGrid Class="allocation-grid">
        <!-- Unassigned Products -->
        <MudItem xs="12" sm="4" md="3">
            <MudPaper Class="pa-2" Elevation="2">
                <MudStack Spacing="1">
                    <MudText Typo="Typo.subtitle1">Unassigned Products (@Unassigned.Count)</MudText>
                    <MudDivider Class="mb-2" />
                    <MudDropZone T="DealScenarioDetail"
                                 Items="Unassigned"
                                 ZoneIdentifier="@UnassignedZoneId"
                                 ItemDropped="OnItemDropped"
                                 Class="dropzone unassigned-zone">
                        <ChildContent>
                            @if (Unassigned.Count == 0)
                            {
                                <MudText Class="text-disabled" Typo="Typo.caption">All products allocated</MudText>
                            }
                            else
                            {
                                @foreach (var item in Unassigned)
                                {
                                    <MudDraggable T="DealScenarioDetail" Item="item" Class="draggable-card">
                                        <MudPaper Class="pa-2 mb-2" Elevation="1">
                                            <MudText Typo="Typo.caption" Class="text-secondary">@item.ProductCode</MudText>
                                            <MudText Typo="Typo.body2">@item.ProductName</MudText>
                                            <MudText Typo="Typo.caption" Class="text-right">
                                                @FormatCurrency(item.Value)
                                            </MudText>
                                        </MudPaper>
                                    </MudDraggable>
                                }
                            }
                        </ChildContent>
                    </MudDropZone>
                </MudStack>
            </MudPaper>
        </MudItem>

        <!-- Manufacturer Zones -->
        <MudItem xs="12" sm="8" md="9">
            <MudGrid>
                @foreach (var allocation in ManufacturerAllocations)
                {
                    <MudItem xs="12" sm="6" md="4" Class="mb-4">
                        <MudPaper Class="pa-2 manufacturer-zone" Elevation="2">
                            <MudStack Spacing="1">
                                <MudStack Row="true" Justify="space-between" AlignItems="center">
                                    <MudText Typo="Typo.subtitle2">@allocation.Manufacturer.Name</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Primary">
                                        @FormatCurrency(allocation.TotalValue)
                                    </MudText>
                                </MudStack>

                                <MudDivider Class="mb-2" />

                                <MudDropZone T="DealScenarioDetail"
                                             Items="allocation.Items"
                                             ZoneIdentifier="@allocation.Manufacturer.Id.ToString()"
                                             ItemDropped="OnItemDropped"
                                             Class="dropzone manufacturer-dropzone">
                                    <ChildContent>
                                        @if (allocation.Items.Count == 0)
                                        {
                                            <MudText Typo="Typo.caption" Class="text-disabled">
                                                Drag products here
                                            </MudText>
                                        }
                                        else
                                        {
                                            @foreach (var item in allocation.Items)
                                            {
                                                <MudDraggable T="DealScenarioDetail" Item="item" Class="draggable-card">
                                                    <MudPaper Class="pa-2 mb-2" Elevation="1">
                                                        <MudText Typo="Typo.caption" Class="text-secondary">@item.ProductCode</MudText>
                                                        <MudText Typo="Typo.body2">@item.ProductName</MudText>
                                                        <MudText Typo="Typo.caption" Class="text-right">
                                                            @FormatCurrency(item.Value)
                                                        </MudText>
                                                    </MudPaper>
                                                </MudDraggable>
                                            }
                                        }
                                    </ChildContent>
                                </MudDropZone>
                            </MudStack>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </MudItem>
    </MudGrid>

</MudPaper>